// <auto-generated />
using System;
using AcctCoreData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AcctCoreData.Migrations
{
    [DbContext(typeof(AcctDataContext))]
    [Migration("20210627230751_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AcctCoreDomain.Account", b =>
                {
                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InGroup")
                        .HasColumnType("int");

                    b.Property<int>("IsSubOf")
                        .HasColumnType("int");

                    b.Property<double>("OpeningBalance")
                        .HasColumnType("float");

                    b.HasKey("AccountNumber");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AcctCoreDomain.Entry", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("GeneralJournal")
                        .HasColumnType("bit");

                    b.HasKey("EntryID");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("AcctCoreDomain.EntryLine", b =>
                {
                    b.Property<int>("LineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<int>("AcctNum")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("ChkNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Cleared")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Deposit")
                        .HasColumnType("float");

                    b.Property<int>("EntryID")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OppAccountNum")
                        .HasColumnType("int");

                    b.Property<string>("Payee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Payment")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("LineID");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("EntryID");

                    b.ToTable("EntryLines");
                });

            modelBuilder.Entity("AcctCoreDomain.EntryLine", b =>
                {
                    b.HasOne("AcctCoreDomain.Account", null)
                        .WithMany("EntryLines")
                        .HasForeignKey("AccountNumber");

                    b.HasOne("AcctCoreDomain.Entry", null)
                        .WithMany("Lines")
                        .HasForeignKey("EntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AcctCoreDomain.Account", b =>
                {
                    b.Navigation("EntryLines");
                });

            modelBuilder.Entity("AcctCoreDomain.Entry", b =>
                {
                    b.Navigation("Lines");
                });
#pragma warning restore 612, 618
        }
    }
}
